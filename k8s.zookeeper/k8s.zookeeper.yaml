apiVersion: v1
kind: ServiceAccount
metadata:
  name: zk
  namespace: default
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: zk
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["zookeeper.cfg"]
  verbs: ["get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  namespace: default
  name: zk
subjects:
- kind: ServiceAccount
  name: zk
  namespace: default
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: zk
  apiGroup: ""
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-zkd-0
  labels:
    app: pv-zkd-0
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /root/zk/zk0/data
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-zkd-1
  labels:
    app: pv-zkd-1
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /root/zk/zk1/data
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-zkd-2
  labels:
    app: pv-zkd-2
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /root/zk/zk2/data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zkd-zk-0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      app: pv-zkd-0
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zkd-zk-1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      app: pv-zkd-1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zkd-zk-2
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      app: pv-zkd-2
---
apiVersion: v1
kind: Service
metadata:
  name: zk
  labels:
    app: zk
spec:
  ports:
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  clusterIP: None
  selector:
    app: zk
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: zk
spec:
  selector:
    matchLabels:
      app: zk
  serviceName: "zk"
  replicas: 3
  template:
    metadata:
      labels:
        app: zk
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: zk
        image: ly/zookeeper:v1
        command: ["/bin/sh"]
        args: ["-c", "expr `echo $HOSTNAME | awk -F[-] '{print $2}'` + 1 > /zk/data/myid; /zookeeper-3.3.6/bin/zkServer.sh start-foreground;"]
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        volumeMounts:
        - name: zkd
          mountPath: /zk/data
        - name: zkconf
          mountPath: /conf
      volumes:
      - name: zkconf
        configMap:
          name: zookeeper.cfg
  volumeClaimTemplates:
  - metadata:
      name: zkd
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
